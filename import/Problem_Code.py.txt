def executeSQLAppend(engine, df, sqlName, dataTypesDict, log, schema):
    TableColumns= list(df.columns) 
    newColumnCheck = False
    logger.debug('_______________________________________________________________________')
    #create SQL string and read matching Table on the server
    sqlStrings = "SELECT * FROM {0}.{1}".format(schema, sqlName)
    sqlRead = pd.read_sql(sqlStrings, engine)
    logger.debug('--Diff:')
    existingColumns = list(sqlRead.columns)
    newnames = list(df[df.columns.difference(existingColumns)].columns)
    logger.debug("Newnames = {0}".format( newnames ))

    if not newnames:
        logger.debug("No new columns")
        return()

    #attemp to create a dataframe and string of columns that need to be added to SQL Server
    try:
        updateList = list(set(list(sqlRead)).symmetric_difference(set(list(df))))
        logger.debug("new columns: {0}".updateList)
        updateFrame = pd.DataFrame(columns=updateList)
        updateColumns= list(updateFrame.columns)
        updateColumns1 = ',\n\t'.join("[{0}] {1}".format(c,dataTypesDict[c]) for c in reversed(updateColumns))
    except:
        logger.exception('ERROR!!!!')

    logger.debug(updateColumns1)
    
    #create SQL File based on tempalte to ALTER current SQL Table and append new Columns
    flds = {'TableSchema'          : schema, 
            'TableName'            : sqlName,
            'TableColumns'         : ', '.join("[{0}]".format(c) for c in TableColumns),
            'updateColumns'        : updateColumns1,
            'viewName'             : sqlName + '_Current',
            'viewSchema'           : sql_schema_history
        }
    filein = open(cfg['sql']['add_Columns'],"r")
    src = Template( filein.read() )
    result = src.substitute(flds)
    logger.debug('_______________________________________________________________________')
    
    #if there are added Columns attempt to push them to the SQL Table
    #TODO: FIX THIS!
    try:
        if(updateColumns):
            engine.execute(result)
            newColumnCheck = True
    #TODO: FIX ABOVE!

    except (exc.SQLAlchemyError, exc.DBAPIError, exc.ProgrammingError) as er:
        logger.error("-Error Updating Columns in SQL Table - ["+str(er.args[0])+"]" )
        logger.exception("Error in File: \t %s \n\n Error: %s \n\n" % (sqlName, er))
        raise
    
    if (updateColumns):
        filein = open(cfg['sql']['create_view'],"r")
        src = Template( filein.read() )
        result = src.substitute(flds)
        dropView = 'DROP VIEW IF EXISTS %s' % (flds['viewName'])
        try:
            logger.debug('----Creating Current View')
            #drop sql view if exits
            engine.execute(dropView)
            #create new sql view
            engine.execute(result)

        except (exc.SQLAlchemyError, exc.DBAPIError, exc.ProgrammingError) as er:
            logger.error("-Error Creating View of SQL Table - ["+str(er.args[0])+"]" )
            logger.exception("Error in Table: \t %s \n\n Error: %s \n\n" % (sqlName, er))
            raise