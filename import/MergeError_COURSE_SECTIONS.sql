/* TYPE 2 MERGES */
INSERT INTO history.COURSE_SECTIONS
    (
        [COURSE.SECTIONS.ID], [SEC.TERM], [SEC.COURSE], [SEC.NAME], [SEC.NO], [SEC.USER1], [SEC.USER6], [SEC.LOCATION], [SEC.LOCATION.DESC.CC], [SEC.CAPACITY], [SEC.EVERY.STUDENT.COUNT], [SEC.STUDENTS.COUNT], [SEC.AUDIT.STUDENT.COUNT], [SEC.ACAD.LEVEL], [SEC.CRED.TYPE], [SEC.MIN.CRED], [SEC.MAX.CRED], [SEC.BILLING.CRED], [XSEC.FTE.COUNT], [XSEC.FTE.CONTACT], [SEC.CEUS], [SEC.CONTACT.HOURS], [SEC.INSTR.METHODS], [SEC.COURSE.LEVELS], [SEC.STATUS.ACTION1], [SEC.STATUS], [SEC.START.DATE], [SEC.CENSUS.DATES], [SEC.END.DATE],
        [EffectiveDatetime],
        [ExpirationDatetime],
        [CurrentFlag]
    )
    SELECT 
        [COURSE.SECTIONS.ID], [SEC.TERM], [SEC.COURSE], [SEC.NAME], [SEC.NO], [SEC.USER1], [SEC.USER6], [SEC.LOCATION], [SEC.LOCATION.DESC.CC], [SEC.CAPACITY], [SEC.EVERY.STUDENT.COUNT], [SEC.STUDENTS.COUNT], [SEC.AUDIT.STUDENT.COUNT], [SEC.ACAD.LEVEL], [SEC.CRED.TYPE], [SEC.MIN.CRED], [SEC.MAX.CRED], [SEC.BILLING.CRED], [XSEC.FTE.COUNT], [XSEC.FTE.CONTACT], [SEC.CEUS], [SEC.CONTACT.HOURS], [SEC.INSTR.METHODS], [SEC.COURSE.LEVELS], [SEC.STATUS.ACTION1], [SEC.STATUS], [SEC.START.DATE], [SEC.CENSUS.DATES], [SEC.END.DATE],
        [EffectiveDatetime],
        [ExpirationDatetime],
        [CurrentFlag] 
    FROM
    (MERGE INTO history.COURSE_SECTIONS DEST
        USING (SELECT DISTINCT * FROM input.COURSE_SECTIONS) SRC ON (
             /*DEST.[TableKey] = SRC.[TableKey]*/
            DEST.[COURSE.SECTIONS.ID] = SRC.[COURSE.SECTIONS.ID]
        )

        /* No record exists in the destination table so insert new records */
        WHEN NOT MATCHED BY TARGET THEN
            INSERT 
            (
                    [COURSE.SECTIONS.ID], [SEC.TERM], [SEC.COURSE], [SEC.NAME], [SEC.NO], [SEC.USER1], [SEC.USER6], [SEC.LOCATION], [SEC.LOCATION.DESC.CC], [SEC.CAPACITY], [SEC.EVERY.STUDENT.COUNT], [SEC.STUDENTS.COUNT], [SEC.AUDIT.STUDENT.COUNT], [SEC.ACAD.LEVEL], [SEC.CRED.TYPE], [SEC.MIN.CRED], [SEC.MAX.CRED], [SEC.BILLING.CRED], [XSEC.FTE.COUNT], [XSEC.FTE.CONTACT], [SEC.CEUS], [SEC.CONTACT.HOURS], [SEC.INSTR.METHODS], [SEC.COURSE.LEVELS], [SEC.STATUS.ACTION1], [SEC.STATUS], [SEC.START.DATE], [SEC.CENSUS.DATES], [SEC.END.DATE],
                    EffectiveDatetime,
                    ExpirationDatetime, 
                    CurrentFlag
            )
            VALUES 
            (  
                    SRC.[COURSE.SECTIONS.ID], SRC.[SEC.TERM], SRC.[SEC.COURSE], SRC.[SEC.NAME], SRC.[SEC.NO], SRC.[SEC.USER1], SRC.[SEC.USER6], SRC.[SEC.LOCATION], SRC.[SEC.LOCATION.DESC.CC], SRC.[SEC.CAPACITY], SRC.[SEC.EVERY.STUDENT.COUNT], SRC.[SEC.STUDENTS.COUNT], SRC.[SEC.AUDIT.STUDENT.COUNT], SRC.[SEC.ACAD.LEVEL], SRC.[SEC.CRED.TYPE], SRC.[SEC.MIN.CRED], SRC.[SEC.MAX.CRED], SRC.[SEC.BILLING.CRED], SRC.[XSEC.FTE.COUNT], SRC.[XSEC.FTE.CONTACT], SRC.[SEC.CEUS], SRC.[SEC.CONTACT.HOURS], SRC.[SEC.INSTR.METHODS], SRC.[SEC.COURSE.LEVELS], SRC.[SEC.STATUS.ACTION1], SRC.[SEC.STATUS], SRC.[SEC.START.DATE], SRC.[SEC.CENSUS.DATES], SRC.[SEC.END.DATE],
                    CAST(SRC.DataDatetime AS datetime2),
                    NULL, 
                    'Y'
            )

        /* No record sxists in the source table so mark record expired */
        /* We are assuming no records will ever be deleted! */
        /*
        WHEN NOT MATCHED BY SOURCE 
        AND DEST.ExpirationDatetime IS NULL
        AND DEST.CurrentFlag = 'Y' 
        THEN
            UPDATE SET DEST.CurrentFlag = 'N', 
                        DEST.ExpirationDatetime = COALESCE(DEST.ExpirationDatetime, "2020-01-09T23:54:23.658Z")
        */

        /* This marks the older record to be outdated for SCD Type 2 */
        WHEN MATCHED 
        AND DEST.ExpirationDatetime IS NULL
        AND DEST.CurrentFlag = 'Y' 
        AND EXISTS
            (SELECT SRC.[COURSE.SECTIONS.ID], SRC.[SEC.TERM], SRC.[SEC.COURSE], SRC.[SEC.NAME], SRC.[SEC.NO], SRC.[SEC.USER1], SRC.[SEC.USER6], SRC.[SEC.LOCATION], SRC.[SEC.LOCATION.DESC.CC], SRC.[SEC.CAPACITY], SRC.[SEC.EVERY.STUDENT.COUNT], SRC.[SEC.STUDENTS.COUNT], SRC.[SEC.AUDIT.STUDENT.COUNT], SRC.[SEC.ACAD.LEVEL], SRC.[SEC.CRED.TYPE], SRC.[SEC.MIN.CRED], SRC.[SEC.MAX.CRED], SRC.[SEC.BILLING.CRED], SRC.[XSEC.FTE.COUNT], SRC.[XSEC.FTE.CONTACT], SRC.[SEC.CEUS], SRC.[SEC.CONTACT.HOURS], SRC.[SEC.INSTR.METHODS], SRC.[SEC.COURSE.LEVELS], SRC.[SEC.STATUS.ACTION1], SRC.[SEC.STATUS], SRC.[SEC.START.DATE], SRC.[SEC.CENSUS.DATES], SRC.[SEC.END.DATE] 
             EXCEPT
             SELECT DEST.[COURSE.SECTIONS.ID], DEST.[SEC.TERM], DEST.[SEC.COURSE], DEST.[SEC.NAME], DEST.[SEC.NO], DEST.[SEC.USER1], DEST.[SEC.USER6], DEST.[SEC.LOCATION], DEST.[SEC.LOCATION.DESC.CC], DEST.[SEC.CAPACITY], DEST.[SEC.EVERY.STUDENT.COUNT], DEST.[SEC.STUDENTS.COUNT], DEST.[SEC.AUDIT.STUDENT.COUNT], DEST.[SEC.ACAD.LEVEL], DEST.[SEC.CRED.TYPE], DEST.[SEC.MIN.CRED], DEST.[SEC.MAX.CRED], DEST.[SEC.BILLING.CRED], DEST.[XSEC.FTE.COUNT], DEST.[XSEC.FTE.CONTACT], DEST.[SEC.CEUS], DEST.[SEC.CONTACT.HOURS], DEST.[SEC.INSTR.METHODS], DEST.[SEC.COURSE.LEVELS], DEST.[SEC.STATUS.ACTION1], DEST.[SEC.STATUS], DEST.[SEC.START.DATE], DEST.[SEC.CENSUS.DATES], DEST.[SEC.END.DATE]
            )
            THEN UPDATE SET 
                DEST.CurrentFlag = 'N', 
                DEST.ExpirationDatetime = CAST(SRC.DataDatetime AS datetime2)

        OUTPUT $ACTION Action_Taken,
            SRC.[COURSE.SECTIONS.ID], SRC.[SEC.TERM], SRC.[SEC.COURSE], SRC.[SEC.NAME], SRC.[SEC.NO], SRC.[SEC.USER1], SRC.[SEC.USER6], SRC.[SEC.LOCATION], SRC.[SEC.LOCATION.DESC.CC], SRC.[SEC.CAPACITY], SRC.[SEC.EVERY.STUDENT.COUNT], SRC.[SEC.STUDENTS.COUNT], SRC.[SEC.AUDIT.STUDENT.COUNT], SRC.[SEC.ACAD.LEVEL], SRC.[SEC.CRED.TYPE], SRC.[SEC.MIN.CRED], SRC.[SEC.MAX.CRED], SRC.[SEC.BILLING.CRED], SRC.[XSEC.FTE.COUNT], SRC.[XSEC.FTE.CONTACT], SRC.[SEC.CEUS], SRC.[SEC.CONTACT.HOURS], SRC.[SEC.INSTR.METHODS], SRC.[SEC.COURSE.LEVELS], SRC.[SEC.STATUS.ACTION1], SRC.[SEC.STATUS], SRC.[SEC.START.DATE], SRC.[SEC.CENSUS.DATES], SRC.[SEC.END.DATE],
            CAST(SRC.DataDatetime AS datetime2) AS EffectiveDatetime, 
            NULL AS ExpirationDatetime, 
            'Y' AS CurrentFlag
        ) AS MERGE_OUT
    WHERE MERGE_OUT.Action_Taken = 'UPDATE'

COMMIT
